{"ast":null,"code":"var _jsxFileName = \"C:\\\\app\\\\epoxy\\\\src\\\\componentes\\\\Contenorimg.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../estilos/App2.css';\nimport datamigas from './datamigas';\nimport datapolvos from './datapolvos';\nimport datatranslucidos from './datatranslucidos';\nimport { SRLWrapper } from 'simple-react-lightbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {};\n\nfunction Contenorimg(props) {\n  _s();\n\n  if (props.ruta == '/img/MIGAS_PIGMENTOS/') {\n    const imagendinamica = datamigas;\n  }\n\n  if (props.ruta == '/img/POLVO_PIGMENTOS/') {\n    const imagendinamica = datapolvos;\n  }\n\n  if (props.ruta == '/img/TRANSLUCIDOS/') {\n    const imagendinamica = datatranslucidos;\n  }\n\n  const [tag, setTag] = useState('all');\n  const [filteredImages, setFilteredImages] = useState([]);\n  useEffect(() => {\n    tag === 'all' ? setFilteredImages(imagendinamica) : setFilteredImages(imagendinamica.filter(imagendinamica => image.tag === tag));\n  }, [tag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App2\",\n    children: /*#__PURE__*/_jsxDEV(SRLWrapper, {\n      options: options,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: filteredImages.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-card\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `${props.ruta} ${image.imageName}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"image\",\n              src: `${props.ruta}${image.imageName}`,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 8\n          }, this)\n        }, image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Contenorimg, \"fTxvTFZhZkuJK/s0n0qQEgg8iUo=\");\n\n_c = Contenorimg;\n\nconst TagButton = ({\n  name,\n  handleSetTag,\n  tagActive\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `tag ${tagActive ? 'active' : null}`,\n    onClick: () => handleSetTag(name),\n    children: name.toUpperCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = TagButton;\nexport default Contenorimg;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contenorimg\");\n$RefreshReg$(_c2, \"TagButton\");","map":{"version":3,"sources":["C:/app/epoxy/src/componentes/Contenorimg.js"],"names":["React","useEffect","useState","datamigas","datapolvos","datatranslucidos","SRLWrapper","options","Contenorimg","props","ruta","imagendinamica","tag","setTag","filteredImages","setFilteredImages","filter","image","map","imageName","id","TagButton","name","handleSetTag","tagActive","toUpperCase"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,SAASC,UAAT,QAA2B,uBAA3B;;AACA,MAAMC,OAAO,GAAG,EAAhB;;AAGA,SAASC,WAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AAC3B,MAAIA,KAAK,CAACC,IAAN,IAAe,uBAAnB,EAA4C;AAC3C,UAAMC,cAAc,GAAGR,SAAvB;AACE;;AACD,MAAIM,KAAK,CAACC,IAAN,IAAe,uBAAnB,EAA4C;AAC7C,UAAMC,cAAc,GAAGP,UAAvB;AACE;;AACD,MAAIK,KAAK,CAACC,IAAN,IAAe,oBAAnB,EAAyC;AAC1C,UAAMC,cAAc,GAAGN,gBAAvB;AACE;;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,KAAD,CAA9B;AACH,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,EAAD,CAApD;AAEAD,EAAAA,SAAS,CACR,MAAM;AACLW,IAAAA,GAAG,KAAK,KAAR,GAAgBG,iBAAiB,CAACJ,cAAD,CAAjC,GAAoDI,iBAAiB,CAACJ,cAAc,CAACK,MAAf,CAAsBL,cAAc,IAAIM,KAAK,CAACL,GAAN,KAAcA,GAAtD,CAAD,CAArE;AACA,GAHO,EAIR,CAACA,GAAD,CAJQ,CAAT;AAOA,sBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BAMC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEL,OAArB;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACEO,cAAc,CAACI,GAAf,CAAmBD,KAAK,iBACxB;AAAoB,UAAA,SAAS,EAAC,YAA9B;AAAA,iCACC;AAAG,YAAA,IAAI,EAAG,GAAER,KAAK,CAACC,IAAK,IAAGO,KAAK,CAACE,SAAU,EAA1C;AAAA,mCACC;AAAK,cAAA,SAAS,EAAC,OAAf;AAAuB,cAAA,GAAG,EAAG,GAAEV,KAAK,CAACC,IAAK,GAAEO,KAAK,CAACE,SAAU,EAA5D;AAA+D,cAAA,GAAG,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD,WAAUF,KAAK,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAND;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA;;GAxCQZ,W;;KAAAA,W;;AAyCT,MAAMa,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAD,KAAuC;AACxD,sBACC;AAAQ,IAAA,SAAS,EAAG,OAAMA,SAAS,GAAG,QAAH,GAAc,IAAK,EAAtD;AAAyD,IAAA,OAAO,EAAE,MAAMD,YAAY,CAACD,IAAD,CAApF;AAAA,cACEA,IAAI,CAACG,WAAL;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAND;;MAAMJ,S;AAQN,eAAeb,WAAf","sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../estilos/App2.css';\r\nimport datamigas from './datamigas';\r\nimport datapolvos from './datapolvos';\r\nimport datatranslucidos from './datatranslucidos';\r\n\r\nimport { SRLWrapper } from 'simple-react-lightbox';\r\nconst options = {\r\n\r\n};\r\nfunction Contenorimg (props){\r\n\tif (props.ruta  == '/img/MIGAS_PIGMENTOS/') {\r\n\t\tconst imagendinamica = datamigas;\r\n\t  } \r\n\t  if (props.ruta  == '/img/POLVO_PIGMENTOS/') {\r\n\t\tconst imagendinamica = datapolvos;\r\n\t  } \r\n\t  if (props.ruta  == '/img/TRANSLUCIDOS/') {\r\n\t\tconst imagendinamica = datatranslucidos;\r\n\t  } \r\n    const [tag, setTag] = useState('all');\r\n\tconst [filteredImages, setFilteredImages] = useState([]);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\ttag === 'all' ? setFilteredImages(imagendinamica) : setFilteredImages(imagendinamica.filter(imagendinamica => image.tag === tag));\r\n\t\t},\r\n\t\t[tag]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"App2\">\r\n\t\t\t{/* <div className=\"tags\">\r\n\t\t\r\n\t\t\t\t<TagButton name=\"free\" tagActive={tag === 'free' ? true : false} handleSetTag={setTag} /> \r\n\t\t\t\r\n\t\t\t</div> */}\r\n\t\t\t<SRLWrapper options={options}>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t{filteredImages.map(image => (\r\n\t\t\t\t\t\t<div key={image.id} className=\"image-card\">\r\n\t\t\t\t\t\t\t<a href={`${props.ruta} ${image.imageName}`}>\r\n\t\t\t\t\t\t\t\t<img className=\"image\" src={`${props.ruta}${image.imageName}`} alt=\"\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</SRLWrapper>\r\n\t\t</div>\r\n\t);\r\n}\r\nconst TagButton = ({ name, handleSetTag, tagActive }) => {\r\n\treturn (\r\n\t\t<button className={`tag ${tagActive ? 'active' : null}`} onClick={() => handleSetTag(name)}>\r\n\t\t\t{name.toUpperCase()}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Contenorimg;"]},"metadata":{},"sourceType":"module"}