{"ast":null,"code":"var _jsxFileName = \"C:\\\\app\\\\epoxy\\\\src\\\\componentes\\\\Contenorimg.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../estilos/App2.css';\nimport datamigas from './datamigas';\nimport datatranslucidos from './datatranslucidos';\nimport datapolvos from './datapolvos';\nimport images from './datamigas';\nimport { SRLWrapper } from 'simple-react-lightbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {};\n\nfunction Contenorimg(props) {\n  _s();\n\n  const [tag, setTag] = useState('all');\n  const [filteredImages, setFilteredImages] = useState([]); //  if (props.ruta == '/img/TRANSLUCIDOS/'){\n  // \timport images from './datamigas';\n  //  }\n  //  if (props.ruta == '/img/POLVO_PIGMENTOS/'){\n  // \tconst [datdinamico, images] = datapolvos\n  // \t }\n  //  if (props.ruta == '/img/TRANSLUCIDOS/'){\n  // \t\t\ttag === 'all' ? setFilteredImages(datapolvos) : setFilteredImages(datapolvos.filter(image => image.tag === tag));\n  //  }\n\n  useEffect(() => {\n    tag === 'all' ? setFilteredImages(images) : setFilteredImages(images.filter(image => image.tag === tag));\n  }, [tag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(SRLWrapper, {\n      options: options,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: filteredImages.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-card\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `${props.ruta}${image.imageName}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"image\",\n              src: `${props.ruta}${image.imageName}`,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 8\n          }, this)\n        }, image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Contenorimg, \"fTxvTFZhZkuJK/s0n0qQEgg8iUo=\");\n\n_c = Contenorimg;\n\nconst TagButton = ({\n  name,\n  handleSetTag,\n  tagActive\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `tag ${tagActive ? 'active' : null}`,\n    onClick: () => handleSetTag(name),\n    children: name.toUpperCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = TagButton;\nexport default Contenorimg;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contenorimg\");\n$RefreshReg$(_c2, \"TagButton\");","map":{"version":3,"sources":["C:/app/epoxy/src/componentes/Contenorimg.js"],"names":["React","useEffect","useState","datamigas","datatranslucidos","datapolvos","images","SRLWrapper","options","Contenorimg","props","tag","setTag","filteredImages","setFilteredImages","filter","image","map","ruta","imageName","id","TagButton","name","handleSetTag","tagActive","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,UAAT,QAA2B,uBAA3B;;AACC,MAAMC,OAAO,GAAG,EAAhB;;AAGD,SAASC,WAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AAC3B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD,CAF2B,CAI3B;AACA;AACA;AACD;AAEA;AAEA;AAGC;AAEA;AACA;;AACCD,EAAAA,SAAS,CACT,MAAM;AACLU,IAAAA,GAAG,KAAK,KAAR,GACDG,iBAAiB,CAACR,MAAD,CADhB,GAC2BQ,iBAAiB,CAACR,MAAM,CAACS,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACL,GAAN,KAAcA,GAArC,CAAD,CAD5C;AAEA,GAJQ,EAKT,CAACA,GAAD,CALS,CAAT;AASD,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAOC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEH,OAArB;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACEK,cAAc,CAACI,GAAf,CAAmBD,KAAK,iBACxB;AAAoB,UAAA,SAAS,EAAC,YAA9B;AAAA,iCACC;AAAG,YAAA,IAAI,EAAG,GAAEN,KAAK,CAACQ,IAAK,GAAEF,KAAK,CAACG,SAAU,EAAzC;AAAA,mCACC;AAAK,cAAA,SAAS,EAAC,OAAf;AAAuB,cAAA,GAAG,EAAG,GAAET,KAAK,CAACQ,IAAK,GAAEF,KAAK,CAACG,SAAU,EAA5D;AAA+D,cAAA,GAAG,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD,WAAUH,KAAK,CAACI,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAPD;AAAA;AAAA;AAAA;AAAA,UADD;AAqBA;;GAhDQX,W;;KAAAA,W;;AAkDT,MAAMY,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAD,KAAuC;AACxD,sBACC;AAAQ,IAAA,SAAS,EAAG,OAAMA,SAAS,GAAG,QAAH,GAAc,IAAK,EAAtD;AAAyD,IAAA,OAAO,EAAE,MAAMD,YAAY,CAACD,IAAD,CAApF;AAAA,cACEA,IAAI,CAACG,WAAL;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAND;;MAAMJ,S;AAQN,eAAeZ,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../estilos/App2.css';\r\n\r\nimport datamigas from './datamigas';\r\nimport datatranslucidos from './datatranslucidos';\r\nimport datapolvos from './datapolvos';\r\nimport images from './datamigas'\r\n\r\nimport { SRLWrapper } from 'simple-react-lightbox';\r\n const options = {\r\n\r\n};\r\nfunction Contenorimg (props){\r\n\tconst [tag, setTag] = useState('all');\t\r\n\tconst [filteredImages, setFilteredImages] = useState([]);\r\n\r\n\t//  if (props.ruta == '/img/TRANSLUCIDOS/'){\r\n\t// \timport images from './datamigas';\r\n\t//  }\r\n//  if (props.ruta == '/img/POLVO_PIGMENTOS/'){\r\n\t\t\r\n// \tconst [datdinamico, images] = datapolvos\r\n\t\t\r\n// \t }\r\n\t\r\n\r\n\t//  if (props.ruta == '/img/TRANSLUCIDOS/'){\r\n\t\t\r\n\t// \t\t\ttag === 'all' ? setFilteredImages(datapolvos) : setFilteredImages(datapolvos.filter(image => image.tag === tag));\r\n\t//  }\r\n\t useEffect(\r\n\t\t() => {\r\n\t\t\ttag === 'all' ? \r\n\t\tsetFilteredImages(images) : setFilteredImages(images.filter(image => image.tag === tag));\r\n\t\t},\r\n\t\t[tag]\r\n\t );\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{/* <div className=\"tags\">\r\n\t\t\t\t<TagButton name=\"all\" tagActive={tag === 'all' ? true : false} handleSetTag={setTag} /> /\r\n\t\t\t\t<TagButton name=\"new\" tagActive={tag === 'new' ? true : false} handleSetTag={setTag} /> /\r\n\t\t\t\t<TagButton name=\"free\" tagActive={tag === 'free' ? true : false} handleSetTag={setTag} /> /\r\n\t\t\t\t<TagButton name=\"pro\" tagActive={tag === 'pro' ? true : false} handleSetTag={setTag} />\r\n\t\t\t</div> */}\r\n\t\t\t<SRLWrapper options={options}>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t{filteredImages.map(image => (\r\n\t\t\t\t\t\t<div key={image.id} className=\"image-card\">\r\n\t\t\t\t\t\t\t<a href={`${props.ruta}${image.imageName}`}>\r\n\t\t\t\t\t\t\t\t<img className=\"image\" src={`${props.ruta}${image.imageName}`} alt=\"\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</SRLWrapper>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst TagButton = ({ name, handleSetTag, tagActive }) => {\r\n\treturn (\r\n\t\t<button className={`tag ${tagActive ? 'active' : null}`} onClick={() => handleSetTag(name)}>\r\n\t\t\t{name.toUpperCase()}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Contenorimg;"]},"metadata":{},"sourceType":"module"}